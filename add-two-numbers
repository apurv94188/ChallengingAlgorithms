# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        
        ival = l1.val + l2.val
        carry = 0
        if ival>9:
            carry = 1
        
        ival = ival % 10
        headNode = ListNode(ival)
        
        l3 = headNode
        
        while l1.next and l2.next:
            l1 = l1.next
            l2 = l2.next
            ival = l1.val + l2.val + carry
            if ival>9:
                carry = 1
            else:
                carry = 0
            ival = ival % 10
            
            l3.next = ListNode(ival)
            l3 = l3.next
        
        l1 = l1.next
        if l2.next:
            l1 = l2.next
        
        while l1:
            ival = l1.val + carry
            if ival>9:
                carry = 1
            else:
                carry = 0
            ival = ival % 10
            l3.next = ListNode(ival)
            l3 = l3.next
            l1 = l1.next
            
        
        if carry:
            l3.next = ListNode(carry)
        
        return headNode
            

            
