class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char,int> mapIndex;
        int last=-1,i;
        int maxlen=0;
        for (i=0; i<s.length(); ++i) {
            if (mapIndex.find(s[i]) == mapIndex.end()) {
                mapIndex.insert(pair<char,int>(s[i],i));
                if (i-last > maxlen)
                    maxlen = i-last;
            }
            else {
                if (mapIndex.find(s[i])->second > last)
                    last = mapIndex.find(s[i])->second;
                else
                    if (i-last > maxlen)
                        maxlen = i-last;
                mapIndex.find(s[i])->second = i;
            }
        } // for s
        if ((--i)-last > maxlen)
            maxlen = i-last;
        
        return maxlen;
    } // func
};
